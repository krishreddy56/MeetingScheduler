/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.35
 * Generated at: 2016-04-12 08:29:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.io.*;
import java.net.*;
import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.*;

public final class commonplaces_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    Vector values=new Vector();
//     StringBuffer sb=new StringBuffer("");
	BufferedReader in=null;
	String[] sVal=null;
	String commonplace="";
    String driver="com.mysql.jdbc.Driver";
    String url="jdbc:mysql://localhost:3306/meetingsheduler";
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

Class.forName(driver);
con=DriverManager.getConnection(url,"root","root");
st=con.createStatement();
rs=st.executeQuery("select * from selectedusers");
ArrayList details=new ArrayList();
while(rs.next()){
	details.add(rs.getString(1));
	details.add(rs.getString(2));
	details.add(rs.getString(3));
}
System.out.println("the details are"+details);
for(int val=0;val<details.size();val=val+3){
	int remove=st.executeUpdate("delete from mapdetails where username='"+details.get(val).toString()+"'");

	
	StringBuffer sb=new StringBuffer("");
	
	in=null;
	
URL url1 = new URL("https://maps.googleapis.com/maps/api/place/search/json?keyword=hotels&location="+details.get(val+1).toString()+","+details.get(val+2).toString()+"&radius="+5000+"&sensor=false&key=AIzaSyB8GcxOcqaX99PvMGqSeyz7-Xgj5NlQQHU");
URLConnection yc = url1.openConnection();
in = new BufferedReader(new InputStreamReader(yc.getInputStream()));
String inputLine;
while ((inputLine = in.readLine())!= null) {
sb.append(" "+inputLine);

}
	String data=new String(sb);
	
		
		JSONParser parser = new JSONParser();
		Object obj=parser.parse(data);
	
	JSONObject jsonObject =(JSONObject)obj;

	JSONObject jsonTemp =null;
	
	
	Set keyVal=jsonObject.keySet();
	
	
	if(keyVal.contains("results")){
		JSONArray msg = (JSONArray) jsonObject.get("results");
		Iterator iterator = msg.iterator();
		System.out.println("the if loop"+keyVal.toArray());
		int intialValue=0;
		while (iterator.hasNext()) {
			jsonObject =(JSONObject)iterator.next();
			
			jsonTemp=(JSONObject)jsonObject.get("geometry");
			jsonTemp=(JSONObject)jsonTemp.get("location");
			
			String lati=jsonTemp.get("lat").toString();
			String land=jsonTemp.get("lng").toString();
			String optionname=jsonObject.get("name").toString();
			String place=jsonObject.get("vicinity").toString();
			
			
			if(optionname.contains("'")){
				
				optionname= optionname.replaceAll("'", "");
				
				
			}
			
			if(place.contains("'")){
				
				place= place.replaceAll("'", "");
				
				
			}							
			 

			int ins=st.executeUpdate("insert into mapdetails values('"+details.get(val).toString()+"','"+lati+"','"+land+"','"+optionname+"','"+place+"')");

		}

}}
    
	rs=st.executeQuery("select * from mapdetails");
	Vector vals=new Vector();
	while(rs.next()){
	vals.add(rs.getString(1));
	}
	TreeSet remove=new TreeSet();
	remove.addAll(vals);
	
	System.out.println("The remove vals are"+remove.size());
	
	int newSize = 3;
	
//	rs=st.executeQuery("select abc.hotel from(select hotel,count(username) as place_Count from mapdetails group by hotel)abc group by hotel having max(abc.place_Count)>="+(remove.size()-1)+"");
	
	rs=st.executeQuery("select abc.hotel from(select hotel,count(username) as place_Count from mapdetails group by hotel)abc group by hotel having max(abc.place_Count)>="+(newSize-1)+"");
	ResultSetMetaData rsmd=rs.getMetaData();
	String name=rsmd.getColumnName(1);
	Vector common=new Vector();
	while(rs.next()){
		String names=rs.getString(name);
		if(names.contains(",")){
			System.out.println(names);
		}else{
	common.add(names);
		}
}
	System.out.println(common);
	if(common.size()>0){
		String commonvals=common.toString();
		
		String splitVals=commonvals.substring(1,commonvals.length()-1);
		String[] splitValues=splitVals.split(",");
		int init=0;
		
      out.write("\r\n");
      out.write("\t\t<textarea rows=\"10\" cols=\"30\" style=\"margin-left:20px;\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");

		int delete=st.executeUpdate("delete from venuedetails");
		for(int count=0;count<splitValues.length;count++){
			out.println((++init)+"."+splitValues[count]+"\n");
			int insert=st.executeUpdate("insert into venuedetails values('"+splitValues[count]+"')");
			
		}
		
      out.write("\r\n");
      out.write("\t\t</textarea>\r\n");
      out.write("\t\t");

	}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
