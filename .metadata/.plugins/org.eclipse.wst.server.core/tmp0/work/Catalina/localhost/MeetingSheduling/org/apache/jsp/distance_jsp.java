/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.35
 * Generated at: 2016-04-12 08:30:24 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.util.*;
import java.util.Vector;

public final class distance_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


    Connection con=null;
    Statement st=null;
    ResultSet rs=null;
    
  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    ");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      out.write("<title></title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

try{
	String driver="com.mysql.jdbc.Driver";
	
	String url="jdbc:mysql://localhost:3306/meetingsheduler";

			Class.forName(driver);


		 con=DriverManager.getConnection(url,"root","root");

		 st=con.createStatement();
		 rs=st.executeQuery("select * from selectedusers");
		 Vector selectedusers=new Vector();
		 while(rs.next()){
			 selectedusers.add(rs.getString(2));
			 selectedusers.add(rs.getString(3));

			 
		 }
		 rs=st.executeQuery("select * from venuedetails");
		 Vector common=new Vector();
		 while(rs.next()){
			 common.add(rs.getString(1));
			 
		 }
		 	Vector listVal=new Vector();
		 for(int init=0;init<common.size();init++){
				rs=st.executeQuery("select * from mapdetails where hotel='"+common.get(init).toString().trim()+"'");
				if(rs.next()){
					listVal.add(common.get(init).toString().trim());
					listVal.add(rs.getString(2));
					listVal.add(rs.getString(3));
					}}
		 
		 
		 
			 Map placeHolder=new HashMap();
			 for(int commons=0;commons<listVal.size();commons=commons+3){
				 double distSum=0;
				 for(int usercount=0;usercount<selectedusers.size();usercount=usercount+2){
				 
				 double theta =Double.parseDouble(selectedusers.get(usercount+1).toString()) - Double.parseDouble(listVal.get(commons+2).toString());
				 double dist = Math.sin(Double.parseDouble(selectedusers.get(usercount).toString()) * Math.PI / 180.0) * Math.sin(Double.parseDouble(listVal.get(commons+1).toString()) * Math.PI / 180.0) + Math.cos(Double.parseDouble(selectedusers.get(usercount).toString()) * Math.PI / 180.0) * Math.cos(Double.parseDouble(listVal.get(commons+1).toString())* Math.PI / 180.0) * Math.cos(theta * Math.PI / 180.0);
				 dist = Math.acos(dist);
				 dist = dist * 180.0 / Math.PI;
				dist = dist * 60 * 1.1515;
				 dist = dist * 1.609344;
				 distSum=distSum+dist;
				
				}
				 placeHolder.put(String.valueOf(distSum).substring(0,1),listVal.get(commons).toString());
				 }
			  Set key=placeHolder.keySet();
			  TreeSet valss=new TreeSet(key);
			  Vector values=new Vector(valss);
			  Collection vals=placeHolder.values();
			  String finalVals=placeHolder.get(values.get(0).toString()).toString();
			  
			  if(finalVals.length()>0){
				  out.print("Get venue:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;");
				  out.print("<input type='text' name='txtField' id='txtField' value='"+finalVals+"'>");
				  session.setAttribute("meetingplace",finalVals);
				 }
			  
			  
			 }catch(Exception ex){
	ex.printStackTrace();
}

      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
